<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DN.Framework.Core</name>
    </assembly>
    <members>
        <member name="T:DN.Framework.Core.AccessFactory">
            <summary>
            反射工具
            </summary>
        </member>
        <member name="M:DN.Framework.Core.AccessFactory.CreatedObject``1">
            <summary>
            创建类
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.AccessFactory.GetAssembly(System.String)">
            <summary>
            获取当前DLL的类型信息
            </summary>
            <param name="dllName"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.AccessFactory.IsSubClassOf(System.Type,System.Type)">
            <summary>
            判断类型是否相等
            </summary>
            <param name="type"></param>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.AccessFactory.CreateInstance``1(System.String,System.String)">
            <summary>
            创建对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fullName">命名空间.类型名</param>
            <param name="assemblyName">程序集</param>
            <returns></returns>
        </member>
        <member name="T:DN.Framework.Core.CodeAttributes.ColumnAttribute">
            <summary>
            列属性
            </summary>
        </member>
        <member name="P:DN.Framework.Core.CodeAttributes.ColumnAttribute.Condition">
            <summary>
            查询条件，如：name like %{0}%
            </summary>
        </member>
        <member name="P:DN.Framework.Core.CodeAttributes.ColumnAttribute.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:DN.Framework.Core.CodeAttributes.ColumnAttribute.Length">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="P:DN.Framework.Core.CodeAttributes.ColumnAttribute.IsPrimaryKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:DN.Framework.Core.CodeAttributes.ColumnAttribute.IsAutoNumber">
            <summary>
            是否自增
            </summary>
        </member>
        <member name="P:DN.Framework.Core.CodeAttributes.ColumnAttribute.IsNull">
            <summary>
            是否为空
            </summary>
        </member>
        <member name="T:DN.Framework.Core.CodeCommand">
            <summary>
            SQL执行
            </summary>
        </member>
        <member name="P:DN.Framework.Core.CodeCommand.CommandText">
            <summary>
            生成命令文本
            </summary>
        </member>
        <member name="P:DN.Framework.Core.CodeCommand.DbConnectionKey">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:DN.Framework.Core.CodeCommand.Parameters">
            <summary>
            数据库参数
            </summary>
        </member>
        <member name="T:DN.Framework.Core.CommandHelper">
            <summary>
            列组的辅助工具
            </summary>
        </member>
        <member name="M:DN.Framework.Core.CommandHelper.CheckPrimaryKey(System.String)">
            <summary>
            检查主键
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.CommandHelper.GetTableNameByModel(System.String)">
            <summary>
            获取表名
            </summary>
            <param name="typename"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.CommandHelper.GetTableNameByPara(System.String)">
            <summary>
            获取表名
            </summary>
            <param name="typename"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.CommandHelper.IsCustomeAttrubute(System.Reflection.PropertyInfo,System.String@)">
            <summary>
            检查自定义属性
            </summary>
            <param name="property"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MsSqlAccessHelper.GetInsert(DN.Framework.Core.IModel)">
            <summary>
            获取Insert信息
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MsSqlAccessHelper.GetUpdate(DN.Framework.Core.IModel)">
            <summary>
            获取更新语句
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MsSqlAccessHelper.GetDelete(DN.Framework.Core.IParameter)">
            <summary>
            获取删除语句
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MsSqlAccessHelper.GetModels(DN.Framework.Core.BasePager)">
            <summary>
            获取不分页的数据
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MsSqlAccessHelper.GetModelsPage(DN.Framework.Core.BasePager)">
            <summary>
            获取分页的数据
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MsSqlAccessHelper.GetModelsCount(DN.Framework.Core.BasePager)">
            <summary>
            获取分页的数据
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="T:DN.Framework.Core.BasePager">
            <summary>
            分页基类
            </summary>
        </member>
        <member name="P:DN.Framework.Core.BasePager.OrderBy">
            <summary>
            排序命令，例如：id desc,name asc
            </summary>
        </member>
        <member name="P:DN.Framework.Core.BasePager.PageIndex">
            <summary>
            当前页，从第0页开始
            </summary>
        </member>
        <member name="P:DN.Framework.Core.BasePager.PageSize">
            <summary>
            页记录大小
            </summary>
        </member>
        <member name="P:DN.Framework.Core.BasePager.Recount">
            <summary>
            记录数
            </summary>
        </member>
        <member name="T:DN.Framework.Core.IAccess`2">
            <summary>
            数据库执行
            </summary>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.Insert(`0)">
            <summary>
            新增
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.InsertIdentityId(`0)">
            <summary>
            新增，返回自增
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.Edit(`0)">
            <summary>
            编辑
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.Delete(`1)">
            <summary>
            删除记录
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.GetModels(`1@)">
            <summary>
            获取多条记录，分页
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.GetModels(`1)">
            <summary>
            获取多条记录，不分页
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.GetSingle(`1)">
            <summary>
            获取单一记录
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.GetRecords(`1)">
            <summary>
            获取总记录数
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.GetConditionByModel(`0)">
            <summary>
            获取标准查询条件
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.GetOtherConditionByModel(`0)">
            <summary>
            获取非标准查询条件
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.GetConditionByPara(`1)">
            <summary>
            获取标准查询条件
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.GetOtherConditionByPara(`1)">
            <summary>
            获取非标准查询条件
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.GetOrderByModel(`0)">
            <summary>
            获取排序条件
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IAccess`2.GetOrderByPara(`1)">
            <summary>
            获取排序条件
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="T:DN.Framework.Core.IBusiness`2">
            <summary>
            业务接口
            </summary>
        </member>
        <member name="T:DN.Framework.Core.IModel">
            <summary>
            实体接口
            </summary>
        </member>
        <member name="T:DN.Framework.Core.IParameter">
            <summary>
            参数接口
            </summary>
        </member>
        <member name="T:DN.Framework.Core.MySqlAccessHelper">
            <summary>
            数据库命令辅助工具
            </summary>
        </member>
        <member name="M:DN.Framework.Core.MySqlAccessHelper.GetInsert(DN.Framework.Core.IModel)">
            <summary>
            获取Insert信息
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MySqlAccessHelper.GetUpdate(DN.Framework.Core.IModel)">
            <summary>
            获取更新语句
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MySqlAccessHelper.GetDelete(DN.Framework.Core.IParameter)">
            <summary>
            获取删除语句
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MySqlAccessHelper.GetModels(DN.Framework.Core.BasePager)">
            <summary>
            获取不分页的数据
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MySqlAccessHelper.GetModelsPage(DN.Framework.Core.BasePager)">
            <summary>
            获取分页的数据
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.MySqlAccessHelper.GetModelsCount(DN.Framework.Core.BasePager)">
            <summary>
            获取分页的数据
            </summary>
            <param name="mp"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.DbProxyFactory.CreatedObject``1">
            <summary>
            创建该类型数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="T:DN.Framework.Core.IDbProxy">
            <summary>
            数据库代理
            </summary>
        </member>
        <member name="M:DN.Framework.Core.IDbProxy.ExecuteTable(DN.Framework.Core.CodeCommand)">
            <summary>
            获取数据
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IDbProxy.ExecuteNonQuery(DN.Framework.Core.CodeCommand)">
            <summary>
            执行SQL
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.IDbProxy.ExecuteScalar(DN.Framework.Core.CodeCommand)">
            <summary>
            执行SQL返回第一个对象
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:DN.Framework.Core.Proxy.MsSqlDbProxy">
            <summary>
            可默认使用该数据代码
            </summary>
        </member>
        <member name="M:DN.Framework.Core.Proxy.MsSqlDbProxy.ExecuteNonQuery(DN.Framework.Core.CodeCommand)">
            <summary>
            执行SQL
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.Proxy.MsSqlDbProxy.ExecuteScalar(DN.Framework.Core.CodeCommand)">
            <summary>
            执行SQL获取第一个对象
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.Proxy.MsSqlDbProxy.ExecuteTable(DN.Framework.Core.CodeCommand)">
            <summary>
            获取结果集
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:DN.Framework.Core.Proxy.MySqlDbProxy">
            <summary>
            可默认使用该数据操作代理
            </summary>
        </member>
        <member name="M:DN.Framework.Core.Proxy.MySqlDbProxy.ExecuteNonQuery(DN.Framework.Core.CodeCommand)">
            <summary>
            执行SQL语句
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.Proxy.MySqlDbProxy.ExecuteScalar(DN.Framework.Core.CodeCommand)">
            <summary>
            执行SQL
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.Proxy.MySqlDbProxy.ExecuteTable(DN.Framework.Core.CodeCommand)">
            <summary>
            执行SQL获取结果集
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="T:DN.Framework.Core.SqlConfigureHelper">
            <summary>
            SQL配置辅助工具
            </summary>
        </member>
        <member name="P:DN.Framework.Core.SqlConfigureHelper.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:DN.Framework.Core.SqlConfigureHelper.ConnectionProvider">
            <summary>
            provider实现程序
            </summary>
        </member>
        <member name="M:DN.Framework.Core.SqlConfigureHelper.GetConnectionString(System.String)">
            <summary>
            连接字符串
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.SqlConfigureHelper.GetConnectionProvider(System.String)">
            <summary>
            实现配置程序
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:DN.Framework.Core.ConvertHelper">
            <summary>
            数据转换工具
            </summary>
        </member>
        <member name="M:DN.Framework.Core.ConvertHelper.ToDbValue(System.Object)">
            <summary>
            转换为数据不可为空的值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.ConvertHelper.ToDbValueNullable(System.Object)">
            <summary>
            数据库为空的对象转换
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.ConvertHelper.GetBoolean(System.Object,System.Boolean)">
            <summary>
            带默认值的数据转换
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.ConvertHelper.GetBoolean(System.Object)">
            <summary>
            bool类型的数据转换
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.ConvertHelper.GetBooleanNullable(System.Object)">
            <summary>
            数据库转换到实体属性
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DN.Framework.Core.ConvertHelper.GetInt(System.Object)">
            <summary>
            转换成INT值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:DN.Framework.Core.ParameterHelper">
            <summary>
            数据库参数转换工具
            </summary>
        </member>
        <member name="M:DN.Framework.Core.ParameterHelper.ConvertValue(System.Object)">
            <summary>
            参数转换
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:DN.Framework.Core.SqlFilterHelper">
            <summary>
            SQL防注入工具
            </summary>
        </member>
        <member name="M:DN.Framework.Core.SqlFilterHelper.CheckPropertyName(System.String)">
            <summary>
            属性校验，只需要验证String就行，如果验证不通过，刚返回空字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
    </members>
</doc>
